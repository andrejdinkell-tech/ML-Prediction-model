«Предсказание факта совершения пользователем целевого действия — покупки». Этапы:
1. Загрузка и обработка данных
2. Проведение исследовательского анализа данных (EDA)
3. Преобразование данных (Feature engineering)
4. Подготовка модели предсказания покупки
5. Внедрение сервиса с помощью Fastapi

Описание проекта
Цель проекта — исследовать поведение пользователей на основе логов и подготовить данные для дальнейшего анализа или построения предсказательных моделей.

Используются два датасета:
- `ga_hits.csv` — события пользователей;
- `ga_sessions.csv` — данные о сессиях.

Используемые библиотеки
- pandas — работа с таблицами
- numpy — численные операции
- seaborn / matplotlib — визуализация
- pickle — сохранение промежуточных результатов

Этапы работы
1. Загрузка данных
   - Чтение файлов `ga_hits.csv`, `ga_sessions.csv`.
   - Сохранение в `pickle` для ускоренного доступа.

2. Oбъединение
   - Слияние данных по `session_id`.

3. Предобработка
   - Преобразование колонок с датами (`hit_date`, `visit_time`, `hit_time`, `visit_date`) в формат datetime.
   - Удаление выбросов методом межквартильного размаха (IQR).
   - Удаление лишних колонок (`hit_date`, `hit_time`, `visit_time`, `visit_date`).

4. Разведочный анализ
   - Описательные статистики (`describe`).
   - Частоты значений (`value_counts`).
   - Анализ уникальности признаков (`nunique`).
   - Визуализация распределений и выбросов (`boxplot`).

5. Формирование целевой переменной
   - `target = event_value` (NaN > 0).
   - Приведение к типу `int`, бинаризация (0/1).

6. Генерация признаков
   - Функция `extract_last_event_features` — извлечение признаков последнего события сессии.
   - Объединение с первыми событиями (`utm_source`, `utm_medium`, `utm_campaign`).
7. Написание скрипта для внедрения сервиса с помощью Fastapi
   - Загрузка модели
   - Формирование BaseModel
   - Написание app-запроса, возвращающего предсказание.
 Запуск
1. Установите зависимости:
   bash
   pip install pandas numpy seaborn matplotlib
2. Сохраните модель и запустите с помощьюю скрипта final_work.py
3. Запустите app (uvicorn final_work:app --reload)
4. Отправьте запрос через Postman.

